<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Food AI Dashboard</title>
  <!-- React + Babel CDN -->
  <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  <!-- Styles -->
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI', sans-serif;
    }

    body {
      display: flex;
      height: 100vh;
      background: #f4f4f4;
    }

    .sidebar {
      width: 220px;
      background-color: #2c3e50;
      color: white;
      padding: 20px;
    }

    .sidebar h2 {
      margin-bottom: 40px;
      text-align: center;
    }

    .sidebar a {
      display: block;
      margin: 15px 0;
      color: #ecf0f1;
      text-decoration: none;
    }

    .main {
      flex: 1;
      padding: 30px;
    }

    .card {
      background: white;
      padding: 25px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      max-width: 600px;
      margin-bottom: 20px;
    }

    input[type="file"] {
      margin-top: 15px;
    }

    .ai-result {
      margin-top: 20px;
      font-weight: bold;
    }

    button {
      margin-top: 10px;
      padding: 10px 15px;
      background-color: #2980b9;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background-color: #3498db;
    }
  </style>
</head>
<body>
  <div id="root"></div>

  <script type="text/babel">
    const Sidebar = () => (
      <div className="sidebar">
        <h2>Food AI</h2>
        <a href="#">Dashboard</a>
        <a href="#">Upload</a>
        <a href="#">Reports</a>
        <a href="#">Settings</a>
      </div>
    );

    const Dashboard = () => {
      const [image, setImage] = React.useState(null);
      const [result, setResult] = React.useState('');

      const handleUpload = (e) => {
        const file = e.target.files[0];
        if (file) {
          setImage(URL.createObjectURL(file));
          setResult(''); // Clear previous result
        }
      };

      const handleAnalyze = () => {
        if (!image) {
          alert('Please upload a food image first.');
          return;
        }

        // Simulate AI Analysis
        setTimeout(() => {
          setResult('Detected: Spaghetti Bolognese üçù (Confidence: 92%)');
        }, 1000);
      };

      return (
        <div className="main">
          <div className="card">
            <h2>Upload Food Image</h2>
            <input type="file" accept="image/*" onChange={handleUpload} />
            {image && <img src={image} alt="Preview" style={{ marginTop: '20px', maxWidth: '100%' }} />}
            <button onClick={handleAnalyze}>Analyze with AI</button>
            {result && <div className="ai-result">{result}</div>}
          </div>
        </div>
      );
    };

    const App = () => (
      <>
        <Sidebar />
        <Dashboard />
      </>
    );

    const root = ReactDOM.createRoot(document.getElementById('root'));
    root.render(<App />);
  </script>
</body>
</html>
